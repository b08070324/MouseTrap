<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:MouseTrap.Controls">


	<Style TargetType="{x:Type local:BarButtonControl}">
		<Style.Resources>
			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</Style.Resources>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:BarButtonControl}">
					<Border x:Name="buttonBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
							SnapsToDevicePixels="True">
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Image 
								x:Name="buttonImage" 
								Source="{TemplateBinding Image}" 
								Margin="{TemplateBinding ImageMargin}" 
								VerticalAlignment="Center" 
								Stretch="Uniform"
								SnapsToDevicePixels="False"
								UseLayoutRounding="False"
								/>
							<TextBlock 
								x:Name="buttonText" 
								Foreground="{TemplateBinding Foreground}" 
								Text="{TemplateBinding Text}" 
								VerticalAlignment="Center" 
								/>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<!-- Button is toggled on -->
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="buttonBorder" Property="Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>

						<!-- Cursor is over button -->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="buttonBorder" Property="Background" Value="{Binding HoverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="buttonBorder" Property="BorderBrush" Value="{Binding HoverBorder, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>

						<!-- Button is toggled on and cursor is over button -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHighlighted" Value="true" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="buttonBorder" Property="Background" Value="{Binding HoverHighlightedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>

						<!-- Button is pressed -->
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="buttonBorder" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="buttonBorder" Property="BorderBrush" Value="{Binding PressedBorder, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="buttonText" Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>

						<!-- Button is disabled -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHighlighted" Value="false" />
								<Condition Property="IsEnabled" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="buttonBorder" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="buttonBorder" Property="BorderBrush" Value="{Binding DisabledBorder, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="buttonText" Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="buttonImage" Property="Source" Value="{Binding DisabledImage, RelativeSource={RelativeSource TemplatedParent}}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
