<Window x:Class="MouseTrap.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
		xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        xmlns:local="clr-namespace:MouseTrap"
		xmlns:localdata="clr-namespace:MouseTrap.Data"
        mc:Ignorable="d"
        Title="Mouse Trap" Height="375" MinHeight="375" Width="650" MinWidth="650" WindowStartupLocation="CenterScreen">
	<Window.Resources>
		<Style x:Key="TrimmedText" TargetType="{x:Type TextBlock}">
			<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		</Style>

		<SolidColorBrush x:Key="Button.Activated.Background" Color="#FFCDFFC1"/>
		<SolidColorBrush x:Key="Button.Activated.Border" Color="#FF5D9E4F"/>
		<SolidColorBrush x:Key="Button.Deactivated.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Deactivated.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>

		<Style x:Key="trapButton" TargetType="Button">
			<Setter Property="Background" Value="{StaticResource Button.Deactivated.Background}" />
			<Setter Property="BorderBrush" Value="{StaticResource Button.Deactivated.Border}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<DataTrigger Binding="{Binding WindowModel.MouseTrapRequested, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
					<Setter Property="Background" Value="{StaticResource Button.Activated.Background}" />
					<Setter Property="BorderBrush" Value="{StaticResource Button.Activated.Border}" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="hasFocus" TargetType="{x:Type emoji:TextBlock}">
			<Setter Property="Visibility" Value="Hidden" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding WindowModel.HasFocus, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="True">
					<Setter Property="Visibility" Value="Visible" />
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="leftSide" TargetType="{x:Type Grid}">
			<Setter Property="Grid.ColumnSpan" Value="1" />
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Value="-1" Binding="{Binding Path=SelectedIndex, ElementName=outputGrid}"/>
						<Condition Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(componentModel:DesignerProperties.IsInDesignMode)}"/>
					</MultiDataTrigger.Conditions>
					<MultiDataTrigger.Setters>
						<Setter Property="Grid.ColumnSpan" Value="2" />
					</MultiDataTrigger.Setters>
				</MultiDataTrigger>
			</Style.Triggers>
		</Style>
		
		<Style x:Key="rightSide" TargetType="{x:Type Grid}">
			<Setter Property="Visibility" Value="Visible" />
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Value="-1" Binding="{Binding Path=SelectedIndex, ElementName=outputGrid}"/>
						<Condition Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(componentModel:DesignerProperties.IsInDesignMode)}"/>
					</MultiDataTrigger.Conditions>
					<MultiDataTrigger.Setters>
						<Setter Property="Visibility" Value="Hidden" />
					</MultiDataTrigger.Setters>
				</MultiDataTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>

	<Grid Margin="16">

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="300"/>
		</Grid.ColumnDefinitions>

		<!-- Left side -->
		<Grid Grid.Column="0" Style="{DynamicResource leftSide}">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<DataGrid Grid.ColumnSpan="2" Name="outputGrid" IsReadOnly="True" AutoGenerateColumns="False" SelectionMode="Single" HeadersVisibility="Column"
					  Margin="0,0,0,8" HorizontalGridLinesBrush="{x:Null}" VerticalGridLinesBrush="{x:Null}" Background="{x:Null}" BorderBrush="#FFABADB3"
					  SelectedCellsChanged="OutputGrid_SelectedCellsChanged">
				<DataGrid.SelectedIndex>
					<Binding Path="WindowModel.SelectedIndex" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
				</DataGrid.SelectedIndex>
				<DataGrid.ItemsSource>
					<Binding Path="WindowListViewSource.View" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
				</DataGrid.ItemsSource>
				<DataGrid.Columns>
					<DataGridTextColumn Header="Name" Binding="{Binding Name}" ElementStyle="{StaticResource TrimmedText}" Width="*" />
					<DataGridTextColumn Header="PID" Binding="{Binding ProcessId}" Width="50" />
				</DataGrid.Columns>
			</DataGrid>

			<Button Grid.Row="1" Padding="0" Click="RefreshWindowList_Click" ToolTip="Refresh program list">
				<Button.ContentTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal" Margin="4">
							<emoji:TextBlock Text="♻️" FontSize="18" VerticalAlignment="Center" />
						</StackPanel>
					</DataTemplate>
				</Button.ContentTemplate>
			</Button>

			<TextBox Grid.Row="1" Grid.Column="2" Margin="8,0,0,0" FontSize="18" VerticalContentAlignment="Center" ToolTip="Search program list" TextChanged="ProcessNameInput_TextChanged" />
		</Grid>

		<!-- Right side -->
		<Grid Grid.Column="1" Margin="16,0,0,0" Style="{DynamicResource rightSide}">
			<Grid.RowDefinitions>
				<RowDefinition Height="90" />
				<RowDefinition Height="110" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<StackPanel Orientation="Vertical">
				<emoji:TextBlock FontSize="20" MaxHeight="60" TextWrapping="Wrap" TextTrimming="CharacterEllipsis">
					<TextBlock.Text>
						<Binding Path="WindowModel.Title" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" FallbackValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin viverra posuere tempor. Praesent sagittis eros purus, ac congue quam sollicitudin quis." />
					</TextBlock.Text>
				</emoji:TextBlock>
				<TextBlock FontSize="12" TextWrapping="Wrap" TextTrimming="CharacterEllipsis">
					<TextBlock.Text>
						<Binding 
							Path="WindowModel.Process" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" FallbackValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin viverra posuere tempor." />
					</TextBlock.Text>
				</TextBlock>
			</StackPanel>

			<Grid Grid.Row="1" VerticalAlignment="Center">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="56" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="74" />
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom">
					<TextBlock.Text>
						<Binding Path="WindowModel.Top" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" FallbackValue="0" />
					</TextBlock.Text>
				</TextBlock>
				<TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center">
					<TextBlock.Text>
						<Binding Path="WindowModel.Left" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" FallbackValue="0" />
					</TextBlock.Text>
				</TextBlock>
				<Border Grid.Row="1" Grid.Column="1" BorderThickness="1" Margin="4" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
				<TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center">
					<TextBlock.Text>
						<Binding Path="WindowModel.Height" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" FallbackValue="0" />
					</TextBlock.Text>
				</TextBlock>
				<TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top">
					<TextBlock.Text>
						<Binding Path="WindowModel.Width" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" FallbackValue="0" />
					</TextBlock.Text>
				</TextBlock>
			</Grid>

			<emoji:TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" Text="👁️" Style="{DynamicResource hasFocus}" />

			<Button Grid.Row="2" VerticalAlignment="Top" Width="48" Height="48" ToolTip="Lock mouse to window" Click="TrapMouse_Click" Style="{DynamicResource trapButton}">
				<emoji:TextBlock Text="🔒" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" />
			</Button>
		</Grid>

	</Grid>
</Window>
